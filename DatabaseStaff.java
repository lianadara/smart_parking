/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tbd;
import java.sql.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.*;

public class DatabaseStaff extends javax.swing.JFrame {
    DefaultTableModel tabModel;
    ResultSet RsProduk=null;
    /**
     * Creates new form DatabaseStaff
     */
    public DatabaseStaff() {
        initComponents();
        Connect();
        StaffTable();
    }
    
      // Menyiapkan objek yang diperlukan untuk mengelola database
    Connection conn;
    Statement stmt;
    ResultSet rs;
    PreparedStatement pst;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButtonSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtSearch = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButtonClear = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtAlamat = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPosisi = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNama = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButtonTambah = new javax.swing.JButton();
        txtKeterangan = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtIDStaff = new javax.swing.JTextField();
        jButtonUpdate = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Data Staff");
        setBackground(new java.awt.Color(255, 235, 205));

        jPanel3.setBackground(new java.awt.Color(255, 230, 208));

        jPanel2.setBackground(new java.awt.Color(255, 230, 208));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Database Staf", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24), new java.awt.Color(139, 69, 19))); // NOI18N

        jButtonSearch.setBackground(new java.awt.Color(244, 164, 96));
        jButtonSearch.setText("Search");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(255, 235, 205));
        jTable1.setForeground(new java.awt.Color(139, 69, 19));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID Staff", "Nama Staff", "Alamat", "Posisi", "Keterangan"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        txtSearch.setBackground(new java.awt.Color(255, 248, 220));
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jComboBox1.setBackground(new java.awt.Color(244, 164, 96));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID Staff", "Nama Staff", "Alamat", "Posisi", "Keterangan" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(244, 164, 96));
        jButton1.setText("Clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonSearch)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSearch)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 230, 208));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Form Staff", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24), new java.awt.Color(139, 69, 19))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(139, 69, 19));

        jButtonClear.setBackground(new java.awt.Color(244, 164, 96));
        jButtonClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-eraser-24.png"))); // NOI18N
        jButtonClear.setText("Clear");
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(139, 69, 19));
        jLabel4.setText("Keterangan");

        txtAlamat.setBackground(new java.awt.Color(255, 248, 220));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(139, 69, 19));
        jLabel3.setText("Posisi");

        txtPosisi.setBackground(new java.awt.Color(255, 248, 220));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(139, 69, 19));
        jLabel2.setText("Alamat");

        txtNama.setBackground(new java.awt.Color(255, 248, 220));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(139, 69, 19));
        jLabel5.setText("Nama");

        jButtonTambah.setBackground(new java.awt.Color(244, 164, 96));
        jButtonTambah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-add-24.png"))); // NOI18N
        jButtonTambah.setText("Tambah");
        jButtonTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTambahActionPerformed(evt);
            }
        });

        txtKeterangan.setBackground(new java.awt.Color(255, 248, 220));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(139, 69, 19));
        jLabel6.setText("ID Staff");

        txtIDStaff.setBackground(new java.awt.Color(255, 248, 220));
        txtIDStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDStaffActionPerformed(evt);
            }
        });

        jButtonUpdate.setBackground(new java.awt.Color(244, 164, 96));
        jButtonUpdate.setIcon(new javax.swing.ImageIcon("C:\\Users\\Asus\\Documents\\NetBeansProjects\\TBD\\src\\images\\icons8-update-24.png")); // NOI18N
        jButtonUpdate.setText("Update");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonDelete.setBackground(new java.awt.Color(244, 164, 96));
        jButtonDelete.setIcon(new javax.swing.ImageIcon("C:\\Users\\Asus\\Documents\\NetBeansProjects\\TBD\\src\\images\\icons8-delete-24 (1).png")); // NOI18N
        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtKeterangan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                            .addComponent(txtAlamat, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPosisi, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(87, 87, 87)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIDStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonTambah, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(jButtonDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtIDStaff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAlamat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPosisi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtKeterangan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonUpdate)
                    .addComponent(jButtonClear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonTambah)
                    .addComponent(jButtonDelete))
                .addGap(29, 29, 29))
        );

        jButtonClose.setBackground(new java.awt.Color(244, 164, 96));
        jButtonClose.setText("Close");
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jButtonClose)
                        .addGap(44, 44, 44))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonClose)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
// Membuat Connnect Function
    public void Connect() {
        String url = "jdbc:jtds:sqlserver://127.0.0.1:1433/SmartParking"; //buka =  nama database yang digunakan 
        try {       
            conn = DriverManager.getConnection(url, "kelompok3", "semangat");
        } catch (SQLException ex) {
            Logger.getLogger(DatabaseStaff.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    private void cariData(String key){
        try{
            Object[] judul_kolom = {"ID Staff", "Nama Staff", "Alamat", "Posisi", "Keterangan"};
            tabModel=new DefaultTableModel(null,judul_kolom);
            jTable1.setModel(tabModel);
            
//            Connection conn=(Connection)koneksi.koneksiDB();
            Statement stt=conn.createStatement();
            tabModel.getDataVector().removeAllElements();
            
            RsProduk=stt.executeQuery("SELECT * from Staff WHERE Deleted=0 AND IDStaff LIKE '%"+key+"%' OR Deleted=0 AND NamaStaff LIKE '%"+key+"%' OR Deleted=0 AND Alamat LIKE '%"+key+"%' OR Deleted=0 AND Posisi LIKE '%"+key+"%' OR Deleted=0 AND Keterangan LIKE '%"+key+"%'");  
            while(RsProduk.next()){
                Object[] data={
                    RsProduk.getString("IDStaff"),
                    RsProduk.getString("NamaStaff"),
                    RsProduk.getString("Alamat"),
                    RsProduk.getString("Posisi"),
                    RsProduk.getString("Keterangan")       
                };
               tabModel.addRow(data);
            }                
        } catch (Exception ex) {
        System.err.println(ex.getMessage());
        }
    }
    
    //Method menampilkan data di Tabel GUI
    public void StaffTable() {
        try {
            pst = conn.prepareStatement("select * from Staff where Deleted=0");
            rs = pst.executeQuery();
            //Deklarasi object yang berperilaku untuk memanggil meta data table
            ResultSetMetaData RSM = rs.getMetaData();
            int c = RSM.getColumnCount();
            DefaultTableModel DF = (DefaultTableModel) jTable1.getModel();
            DF.setRowCount(0);

            //Memasukkan data SQL ke Table GUI
            while (rs.next()) {
                Vector v2 = new Vector();
                for (int i = 1; i <= c; i++) {
                    v2.add(rs.getString("IDStaff"));
                    v2.add(rs.getString("NamaStaff"));
                    v2.add(rs.getString("Alamat"));
                    v2.add(rs.getString("Posisi"));
                    v2.add(rs.getString("Keterangan"));

                }
                DF.addRow(v2);
            }

        } catch (SQLException ex) {
            Logger.getLogger(DatabaseStaff.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void txtIDStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDStaffActionPerformed
        try
            {
                pst = conn.prepareStatement("select * from Staff where IDStaff='"+txtIDStaff.getText()+"'");
//                st=con.createStatement();
//                rs=pst.executeQuery(sql);
                  rs = pst.executeQuery();

                while(rs.next())
                {
                    txtNama.setText(rs.getString("NamaStaff"));
                    txtAlamat.setText(rs.getString("Alamat"));
                    txtPosisi.setText(rs.getString("Posisi"));
                    txtKeterangan.setText(rs.getString("Keterangan"));
                   
                }
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,"GAGAL");
            }        
    }//GEN-LAST:event_txtIDStaffActionPerformed

    private void jButtonTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTambahActionPerformed
        
        SignUpStaff SUStaff = new SignUpStaff();
        SUStaff.setVisible(true);
        this.setVisible(false);
        this.setDefaultCloseOperation(this.EXIT_ON_CLOSE);
        this.dispose();
        
//        String IDStaff = txtIDStaff.getText();
//        String Nama = txtNama.getText();
//        String Alamat = txtAlamat.getText();
//        String Posisi = txtPosisi.getText();
//        String Ket = txtKeterangan.getText();
//
//        try {
//            pst = conn.prepareStatement("insert into Staff(IDStaff, NamaStaff, Alamat, Posisi, Keterangan, Deleted)values(?,?,?,?,?,0)");
//            pst.setString(1, IDStaff);
//            pst.setString(2, Nama);
//            pst.setString(3, Alamat);
//            pst.setString(4, Posisi);
//            pst.setString(5, Ket);
//            
//
//            int k = pst.executeUpdate();
//            System.out.println("Nilai executeUpdate" + k);
//            if (k == 1 && IDStaff != "") {
//                //Menampilkan Box keberhasilan saat mengupdate data
//                JOptionPane.showMessageDialog(this, "Record Added");
//                //Clear Data yang ada di box
//                txtIDStaff.setText("");
//                txtNama.setText("");
//                txtAlamat.setText("");
//                txtPosisi.setText("");
//                txtKeterangan.setText("");
//                txtIDStaff.requestFocus();
//                //Agar Tabel di kanannya terupdate (view ulang)
//                StaffTable();
//            } else {
//                //HMMM KOK INI GAK GUNA YAA :v padahal logikanya bisa
//                JOptionPane.showMessageDialog(this, "Record Failed");
//            }
//        } catch (SQLException ex) {
//            Logger.getLogger(DatabaseStaff.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_jButtonTambahActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {                                         
        String IDStaff = txtIDStaff.getText();
        String Nama = txtNama.getText();
        String Alamat = txtAlamat.getText();
        String Posisi = txtPosisi.getText();
        String Ket = txtKeterangan.getText();

        //Untuk mengambil data di Table
//        DefaultTableModel d1 = (DefaultTableModel) jTable1.getModel();
//        int SelectIndex = jTable1.getSelectedRow();
//        String bookno = d1.getValueAt(SelectIndex, 0).toString();
        if(txtIDStaff.getText().equals("") || txtNama.getText().equals("") || txtAlamat.getText().equals("") || txtPosisi.getText().equals("") || txtKeterangan.getText().equals(""))
                JOptionPane.showMessageDialog(null,"Masukkan data secara lengkap!");
        else {
        try {
            pst = conn.prepareStatement("update Staff set NamaStaff=?, Alamat=?, Posisi=?, Keterangan=? where IDStaff=?");
            
            pst.setString(1, Nama);
            pst.setString(2, Alamat);
            pst.setString(3, Posisi);
            pst.setString(4, Ket);
            pst.setString(5, IDStaff);

            int k = pst.executeUpdate();
            System.out.println("Nilai executeUpdate" + k);
            if (k == 1) {
                //Menampilkan Box keberhasilan saat mengupdate data
                JOptionPane.showMessageDialog(this, "Data diupdate");
                txtIDStaff.setText("");
                txtNama.setText("");
                txtAlamat.setText("");
                txtPosisi.setText("");
                txtKeterangan.setText("");
                txtIDStaff.requestFocus();
                //Agar Tabel di kanannya terupdate (view ulang)
                StaffTable();
            } else {
                //HMMM KOK INI GAK GUNA YAA :v padahal logikanya bisa                JOptionPane.show
                JOptionPane.showMessageDialog(this, "Data gagal ditambahkan");
            }
        } catch (SQLException ex) {
            Logger.getLogger(DatabaseStaff.class.getName()).log(Level.SEVERE, null, ex);
        }

        }
    }                                         

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        txtIDStaff.setText("");
        txtNama.setText("");
        txtAlamat.setText("");
        txtPosisi.setText("");
        txtKeterangan.setText("");
        txtIDStaff.requestFocus();
        //Agar Tabel di kanannya terupdate (view ulang)
        StaffTable();
    }                                        

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {                                         
        String IDStaff = txtIDStaff.getText();
        String Nama = txtNama.getText();
        String Alamat = txtAlamat.getText();
        String Posisi = txtPosisi.getText();
        String Ket = txtKeterangan.getText();

        //Untuk mengambil data di Table
//        DefaultTableModel d1 = (DefaultTableModel) jTable1.getModel();
//        int SelectIndex = jTable1.getSelectedRow();
//        String bookno = d1.getValueAt(SelectIndex, 0).toString();
        if(txtIDStaff.getText().equals("") || txtNama.getText().equals("") || txtAlamat.getText().equals("") || txtPosisi.getText().equals("") || txtKeterangan.getText().equals(""))
                JOptionPane.showMessageDialog(null,"Masukkan data secara lengkap!");
        else {                                    
        // TODO add your handling code here:
//        DefaultTableModel d1 = (DefaultTableModel) jTable1.getModel();
//        int SelectIndex = jTable1.getSelectedRow();
//        String bookno = d1.getValueAt(SelectIndex, 0).toString();

        try {
//            String IDStaff = txtIDStaff.getText();
            pst = conn.prepareStatement("update Staff set Deleted=1 where IDStaff=?");
            
            pst.setString(1, IDStaff);
            //Query 
//            pst = conn.prepareStatement("delete from Staff where IDStaff=?");
////            pst.setString(1, "IDStaff");
//            pst.setString(1, bookno);
            //
            
            int k = pst.executeUpdate();
            if (k == 1) {
                JOptionPane.showMessageDialog(this, "Data telah dihapus");
                txtIDStaff.setText("");
                txtNama.setText("");
                txtAlamat.setText("");
                txtPosisi.setText("");
                txtKeterangan.setText("");
                txtIDStaff.requestFocus();
                //Agar Tabel di kanannya terupdate (view ulang)
                StaffTable();
            
            } else {
                JOptionPane.showMessageDialog(this, "Data gagal dihapus");
            }

        } catch (SQLException ex) {
            Logger.getLogger(DatabaseStaff.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }                                        

    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
        HalamanUtama Beranda = new HalamanUtama();
        Beranda.setVisible(true);
        this.setVisible(false);
        this.setDefaultCloseOperation(this.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_jButtonCloseActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        String ComboItem = jComboBox1.getSelectedItem().toString();
        String Keyword = txtSearch.getText();
        //txtSearch.setText(jComboBox1.getSelectedItem().toString());

        //Dari Code Tabel untuk menampilkan data di tabel
        try {
            //Karena Combo boxnya ada beberapa pilihan dan perlu querynya bergantung ke sana perlu dibikin if else statements
            if (ComboItem == "ID Staff") {
                pst = conn.prepareStatement("select * from Staff where IDStaff = ? and Deleted=0 ");
            } else if (ComboItem == "Nama Staff") {
                pst = conn.prepareStatement("select * from Staff where NamaStaff = ? and Deleted=0 ");
            } else if (ComboItem == "Alamat") {
                pst = conn.prepareStatement("select * from Staff where Alamat= ? and Deleted=0 ");
            } else if (ComboItem == "Posisi") {
                pst = conn.prepareStatement("select * from Staff where Posisi = ? and Deleted=0 ");
            } else if (ComboItem == "Keterangan") {
                pst = conn.prepareStatement("select * from Staff where Keterangan = ? and Deleted=0 ");
            }
            pst.setString(1, Keyword);
            rs = pst.executeQuery();

            //Deklarasi object yang berperilaku untuk memanggil meta data table
            ResultSetMetaData RSM = rs.getMetaData();
            int c = RSM.getColumnCount();
//            JOptionPane.showMessageDialog(this, "Nilai Combo Item yg terpilih " + ComboItem);
            DefaultTableModel DF = (DefaultTableModel) jTable1.getModel();
            DF.setRowCount(0);

            //Memasukkan data SQL ke Table GUI
            while (rs.next()) {
                Vector v2 = new Vector();
                for (int i = 1; i <= c; i++) {
                    v2.add(rs.getString("IDStaff"));
                    v2.add(rs.getString("NamaStaff"));
                    v2.add(rs.getString("Alamat"));
                    v2.add(rs.getString("Posisi"));
                    v2.add(rs.getString("Keterangan"));

                }
                DF.addRow(v2);
            }

        } catch (SQLException ex) {
            Logger.getLogger(DatabaseStaff.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        txtIDStaff.setText("");
        txtNama.setText("");
        txtAlamat.setText("");
        txtPosisi.setText("");
        txtKeterangan.setText("");
        txtIDStaff.requestFocus();
        //Agar Tabel di kanannya terupdate (view ulang)
        StaffTable();
    }//GEN-LAST:event_jButtonClearActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
                Class.forName("net.sourceforge.jtds.jdbc.Driver");
                String url = "jdbc:jtds:sqlserver://127.0.0.1:1433/SmartParking"; 
                Connection koneksi = DriverManager.getConnection(url, "kelompok3", "semangat"); 
                String sql = "SELECT * FROM Staff where Deleted = '0'";
                Statement state = koneksi.createStatement();
                //it will return a result set
                ResultSet rs = state.executeQuery(sql);
                
                ResultSetMetaData rsmetadata = rs.getMetaData();
                //it stores the number of columns
                int columns = rsmetadata.getColumnCount();
                
                DefaultTableModel dtn = new DefaultTableModel();
                Vector columns_name = new Vector();
                Vector data_rows = new Vector();
                
                for(int i=1; i< columns; i++){
                    columns_name.addElement(rsmetadata.getColumnName(i));    
                }
                dtn.setColumnIdentifiers(columns_name);
                
                while(rs.next()){
                    
                    data_rows = new Vector();
                    for(int j=1; j<columns; j++){
                    data_rows.addElement(rs.getString(j));
                    
                    }
                    dtn.addRow(data_rows);
                }
                
                jTable1.setModel(dtn);
            }
        catch (Exception e){
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        
        // TODO add your handling code here:
        DefaultTableModel d1 = (DefaultTableModel) jTable1.getModel();
        int SelectIndex = jTable1.getSelectedRow();

        //Agar saat dipilih data di table langsung muncul di Baris2 yang ada di Text
        String bookno = d1.getValueAt(SelectIndex, 0).toString();

        txtIDStaff.setText(d1.getValueAt(SelectIndex, 0).toString());
        txtNama.setText(d1.getValueAt(SelectIndex, 1).toString());
        txtAlamat.setText(d1.getValueAt(SelectIndex, 2).toString());
        txtPosisi.setText(d1.getValueAt(SelectIndex, 3).toString());
        txtKeterangan.setText(d1.getValueAt(SelectIndex, 4).toString());
        //Bisa dipake bisa enggak aku cenderung agar saat save dia eror
        //Agar saat mouse click ke data di table btn Save tidak bisa digunakan
//        btnSave.setEnabled(false);
    }//GEN-LAST:event_jTable1MouseClicked

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        String key=txtSearch.getText();
//        System.out.println(key);
        
        if(key==""){
            StaffTable();
        }
        else{
            cariData(key);
        }
    }//GEN-LAST:event_txtSearchKeyReleased
                             

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DatabaseStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DatabaseStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DatabaseStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DatabaseStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DatabaseStaff().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JButton jButtonTambah;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtAlamat;
    private javax.swing.JTextField txtIDStaff;
    private javax.swing.JTextField txtKeterangan;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtPosisi;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
